// working with text files
// saving signals, spectrums ... in text files
var fs = require("fs")


module.exports = {
	writeFileSync:function(file,data){
		try{
			fs.writeFileSync(file,data)
		} catch(e) {
			console.log("TXTSYS_ERRWRS: "+e)
			return false
		}
		return true
	},
	writeFile:function(file,data){
		fs.writeFile(file,data,function(err){
			if(err){
				console.log("TXTSYS_ERRWR: "+err)
			}
		})
	},
	appendFile:function(file,data){
		fs.appendFile(file,data,function(err){
			if(err){
				console.log("TXTSYS_ERRAPND: "+err)
			}
		})
	},
	appendFileSync:function(file,data){
		try{
			fs.appendFileSync(file,data)
		} catch(e) {
			console.log("TXTSYS_ERRAPNDS: "+e)
			return false
		}
		return true
	},
	writeSpectrumToFile(filename,sp,spLength,sync){
		try{
			sync = sync === undefined ? true : false;
			var str ="N\tCh1\tCh2\tCh3\tCh4\tCh5\tCh6\tCh7\tCh8\tCh9\tCh10\tCh11\tCh12\n";
			for (var i=0;i<spLength;i++){
				str+=i+"\t"
				for (var j=0;j<12;j++){
					str+=sp[j][i]+"\t";
				}
				str+="\n";
			}
		} catch (e){
			console.error("TXTSYS_ERRSP: "+e)
		}
		if(sync){
			var result = this.writeFileSync(filename,str)
			str = null
			return result
		} else {
			this.writeFile(filename,str)
		}
	},
	writeCountRateToFile:function(filename,data,timestamp,sync){
		fs.stat(filename,function(err){
			var str = "\n"+timestamp.getDate()+"-"+(timestamp.getMonth()+1)+"-"+timestamp.getFullYear()+" "+timestamp.getHours()+":"+timestamp.getMinutes()+"\t"
			if(err){
				str ="Time\tCh1\tCh2\tCh3\tCh4\tCh5\tCh6\tCh7\tCh8\tCh9\tCh10\tCh11\tCh12\n"+timestamp.getDate()+"-"+(timestamp.getMonth()+1)+"-"+timestamp.getFullYear()+" "+timestamp.getHours()+":"+timestamp.getMinutes()+"\t";
			}
			for (var i in data){
				str+=data[i]+"\t"
			}
			if(sync){
				var result = module.exports.appendFileSync(filename,str)
				str = null
				return result
			} else {
				module.exports.appendFile(filename,str)
			}
		})
	},
	saveSignalsTXT:function(filename,data,sync){
		var str = "\nTIME:"+data.time+"\n"
		var length = data.signal[0].length
		for(var i=0;i<length;i++){
			str+="\t"
			for(var j in data.signal){
				str+=data.signal[j][i]+"\t"
			}
			str+="\n"
		}
		if(data.tails!=undefined){
			var lengtht = data.tails[0].length
			for(var i=0;i<lengtht;i++){
				str+="tail\t"
				for (var k = 0 ;k<12;k++){
					str+=Math.floor(data.tails[k][i])+"\t";
				}
				str+="\n";
			}
		}
		if(sync){
			var result = this.appendFileSync(filename,str)
			str = null
			return result
		} else {
			this.appendFile(filename,str)
		}
	},
	saveZeroLines:function(filename,data,sync){
		var str = ""
		for(var i in data){
			str += data[i].number+"\t"+data[i].time+"\t"
			for(var j in data[i].zero_lines){
				str+=data[i].zero_lines[j]+"\t"
			}
			str+="\n"
		}
		if(sync){
			var result = this.appendFileSync(filename,str)
			str = null
			return result
		} else {
			this.appendFile(filename,str)
		}
	}
}
